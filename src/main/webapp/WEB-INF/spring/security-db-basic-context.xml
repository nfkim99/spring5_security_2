<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
   
   <!-- 권한 컨트롤 -->
   <!-- 작은거에서 큰거 순으로 -->
     <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login/loginForm" access="permitAll" />
        <intercept-url pattern="/" access="permitAll" />
         <intercept-url pattern="/security/member" access="hasRole('USER')" /> 
      <intercept-url pattern="/security/admin" access="hasRole('ADMIN')" />  
      
      <!--로그인 페이지 커스텀 화    -->
      <form-login login-page="/login/loginForm"
                    default-target-url="/"
                    authentication-failure-url="/login/loginForm?error"
                    username-parameter="id"
                    password-parameter="password" />
      
      <logout logout-url="/logout" logout-success-url="/" /> 
                
      <!-- 403 에러 처리 -->
      <access-denied-handler error-page="/security/accessError"/>      
   </http> 
   
<!--    <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.kImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>  -->
   
    <beans:bean id="customNoOpPasswordEncoder" class="edu.kosmo.ex.security.CustomNoOpPasswordEncoder"/>
   
   
<!-- provider --> 
<!-- user-by 인증쿼리 -->
<!-- authorities-by 권한쿼리 -->
   <authentication-manager>
      <authentication-provider>
      <password-encoder ref="customNoOpPasswordEncoder"/>  
      <jdbc-user-service 
               data-source-ref="dataSource"
                users-by-username-query="select ename, empno, 1 from emp where ename=? "
                 authorities-by-username-query="select ename, case when job='MANAGER' then 'ROLE_ADMIN' else 'ROLE_USER'
                 end authority from emp where ename = ?"
              /> 
              
      </authentication-provider>
   </authentication-manager>
    
    
</beans:beans>